// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <div
          className="nav-element"
        >
          Home
        </div>
        <div
          className="nav-element"
        >
          Identify
        </div>
        <div
          className="nav-element"
        >
          Browse
        </div>
        <div
          className="nav-element"
        >
          Random
        </div>
        <div
          className="nav-element"
        >
          Search
        </div>
        <div
          className="nav-element"
        >
          About
        </div>
      </React.Fragment>,
      "className": "navbar",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="nav-element"
          >
            Home
          </div>,
          <div
            className="nav-element"
          >
            Identify
          </div>,
          <div
            className="nav-element"
          >
            Browse
          </div>,
          <div
            className="nav-element"
          >
            Random
          </div>,
          <div
            className="nav-element"
          >
            Search
          </div>,
          <div
            className="nav-element"
          >
            About
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "Home",
          "nodeType": "host",
          "props": Object {
            "children": "Home",
            "className": "nav-element",
          },
          "ref": null,
          "rendered": "Home",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "Identify",
          "nodeType": "host",
          "props": Object {
            "children": "Identify",
            "className": "nav-element",
          },
          "ref": null,
          "rendered": "Identify",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "Browse",
          "nodeType": "host",
          "props": Object {
            "children": "Browse",
            "className": "nav-element",
          },
          "ref": null,
          "rendered": "Browse",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "Random",
          "nodeType": "host",
          "props": Object {
            "children": "Random",
            "className": "nav-element",
          },
          "ref": null,
          "rendered": "Random",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "Search",
          "nodeType": "host",
          "props": Object {
            "children": "Search",
            "className": "nav-element",
          },
          "ref": null,
          "rendered": "Search",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "About",
          "nodeType": "host",
          "props": Object {
            "children": "About",
            "className": "nav-element",
          },
          "ref": null,
          "rendered": "About",
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <div
            className="nav-element"
          >
            Home
          </div>
          <div
            className="nav-element"
          >
            Identify
          </div>
          <div
            className="nav-element"
          >
            Browse
          </div>
          <div
            className="nav-element"
          >
            Random
          </div>
          <div
            className="nav-element"
          >
            Search
          </div>
          <div
            className="nav-element"
          >
            About
          </div>
        </React.Fragment>,
        "className": "navbar",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div
              className="nav-element"
            >
              Home
            </div>,
            <div
              className="nav-element"
            >
              Identify
            </div>,
            <div
              className="nav-element"
            >
              Browse
            </div>,
            <div
              className="nav-element"
            >
              Random
            </div>,
            <div
              className="nav-element"
            >
              Search
            </div>,
            <div
              className="nav-element"
            >
              About
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "Home",
            "nodeType": "host",
            "props": Object {
              "children": "Home",
              "className": "nav-element",
            },
            "ref": null,
            "rendered": "Home",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "Identify",
            "nodeType": "host",
            "props": Object {
              "children": "Identify",
              "className": "nav-element",
            },
            "ref": null,
            "rendered": "Identify",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "Browse",
            "nodeType": "host",
            "props": Object {
              "children": "Browse",
              "className": "nav-element",
            },
            "ref": null,
            "rendered": "Browse",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "Random",
            "nodeType": "host",
            "props": Object {
              "children": "Random",
              "className": "nav-element",
            },
            "ref": null,
            "rendered": "Random",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "Search",
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "className": "nav-element",
            },
            "ref": null,
            "rendered": "Search",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "About",
            "nodeType": "host",
            "props": Object {
              "children": "About",
              "className": "nav-element",
            },
            "ref": null,
            "rendered": "About",
            "type": "div",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
